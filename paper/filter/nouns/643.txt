#
文字
列
パターン
MathML
構造
利用
数学
問題
文
検索
(
A
Method
for
Searching
Question
Sentences
in
Mathematics
by
String
Patterns
and
the
Structure
of
MathML
)
JSAI
2013
https
://
kaigi
.
org
/
jsai
/
webprogram
/
2013
/
session
-
227
.
html
京都大
学
生徒
卒論
諸君
の
##
3
.
小
問
集合
抽出
一つ
問題
-
前提
記述
(
P
)
-
質問
記述
いくつ
(
Q
)
分解
.
分解
-
P
=
{
P
}
-
Q
=
{
Q
1
,
Q
2
}
-
(
P
+
Q
1
)
-
(
P
+
Q
2
)
の
自然
訓練
データ
`
TP
`,
`
TQ
`
未知
問題
データ
`
U
`
`
UP
`,
`
UQ
`
抽出
説明
パターン
言語
###
パターン
言語
-
Sigma
:
Alphabet
-
X
:
Vars
```
(
Sigma
|
X
)+
```
定義
もの
ここ
変数
一
度
限定
(
正規
パターン
言語
)
--
正規
言語
グループ
化
バージョン
?
パターン
p
,
q
パターン
q
代入
パターン
p
とき
```
q
->
p
```
```
q
\
succeq
p
```
p
汎
化
(
generalization
)
q
p
包摂
(
subsume
)
パターン
集合
`
p
1
,
p
2
..
pn
`
パターン
q
```
q
->
p
1
and
q
->
p
2
and
...
and
q
->
pn
```
とき
q
`
p
1
..
pn
`
共通
汎
化
共通
汎
化
よう
パターン
集合
`
Pi
=
{
q
,
q
1
,
q
2
,
...
}`
```
q
<-
Pi
forall
q
'
<-
Pi
(
q
/=
q
').
q
'
->
q
and
q
-/>
q
'
```
とき
`
q
`
極小
共通
汎
化
パターン
`
p
`
言語
`
L
(
p
)`
これ
p
空文字
列
任意
代入
こと
文字
列
無限
集合
パターン
集合
`
Pi
=
{
p
1
,
p
2
,
..
pn
}`
```
L
(
Pi
)
=
L
(
p
1
)
|
L
(
p
2
)
|
..
|
L
(
pn
)
```
###
話
TP
TQ
パターン
集合
PiP
,
PiQ
生成
L
(
PiP
),
L
(
PiQ
)
部分
集合
仮定
訓練
データ
TP
,
TQ
次
よう
PiP
,
PiQ
U
UP
,
UQ
-
`
size
$
UP
(
U
and
L
(
PiP
))`
-
`
size
$
UQ
(
U
and
L
(
PiQ
))`
`
`
対称
差
###
具体
的
アルゴリズム
TP
,
TQ
PiP
同様
手順
PiQ
回数
`
const
k
`
閾値
`
const
m
`
用意
```
haskell
loop
k
,
(
TP
=
TP
,
PiP
=
emptyset
)
e
1
<-
TP
e
2
<-
TP
let
p
=
minimum
common
pattern
of
e
1
,
e
2
let
lang
=
L
p
let
goodness
=
size
$
lang
and
TP
badness
=
size
$
lang
and
TQ
m
'
=
goodness
/
(
goodness
+
badness
)
if
m
'
>=
m
then
let
PiP
'
=
PiP
and
{
P
}
TP
'
=
TP
'
\\
lang
in
recur
TP
',
PiP
'
else
recur
TP
,
PiP
return
TP
```
構成
TP
,
TQ
文字
列
d
P
,
Q
どちら
```
haskell
scoreP
=
sum
[(
abs
$
(
L
p
)
and
TP
)
-
(
abs
$
(
L
p
)
and
TQ
)
|
p
<-
PiP
,
p
>=
d
]
scoreQ
=
sum
[(
abs
$
(
L
p
)
and
TQ
)
-
(
abs
$
(
L
p
)
and
TP
)
|
p
<-
PiP
,
p
>=
d
]
```
scoreP
scoreQ
大小
比較
判断
##
問題
文
間
類似
度
###
自然
言語
文
間
類似
度
索引
語
D
=
(
w
1
,
..
wn
)
tf
-
idf
重み
cos
similarity
`
SIM
-
N
`
###
数式
集合
間
類似
度
一つ
数式
一つ
数式
間
類似
度
Yokoi
+
手法
`
T
-
sim
`
数式
集合
一つ
一つ
間
類似
度
Earth
Mover
'
s
Distance
(
EMD
)
```
Pi
1
=
{
e
1
,
e
2
..
en
}
Pi
2
=
{
f
1
,
f
2
..
fm
}
s
->
ei
ei
->
fj
fj
->
t
```
max
-
flow
```
maximize
sum
_(
i
,
j
)
T
-
sim
(
ei
,
fj
)
*
F
[
i
,
j
]
```
枝
容量
`
s
->
_`,
`_
->
t
`
無限
`
ei
->
fj
`
min
(
w
(
ei
),
w
(
fj
))
ここ
w
(
e
)
数式
e
重み
```
SIM
-
E
=
(
sum
T
-
sim
*
F
)
/
(
sum
F
)
```
###
全体
類似
度
自然
言語
部分
数式
部分
```
SIM
-
Q
=
sqrt
$
SIM
-
N
*
SIM
-
E
```
##
実験
パターン
言語
基本
的
human
-
readble
さ
そう
P
,
Q
分類
```
class
:
F
1
P
:
0
.
659
Q
:
0
.
821
```
###
PiP
-
x
1
x
2
x
3
-
x
1
点
x
2
x
3
x
4
-
x
1
い
x
2
x
3
(
x
1
(
adj
)
x
2
and
x
3
)
-
x
1
とき
x
2
(
when
x
1
,
x
2
)
###
PiQ
-
x
1
x
2
x
3
(
x
1
do
x
2
and
x
3
)
-
x
1
(
it
is
x
1
)
-
x
1
(
it
becomes
x
1
)
-
(
It
is
....
and
)
最終
的
問題
11
クラス
分類
自然
言語
部分
VSM
数式
それ
バージョン
VSM
-
MATH
比較
統計
どちら
100
%.
大体
ベクトル
85
.
2
->
96
.
4
%.
の
三角
比
70
.
2
->
56
.
0
%.
