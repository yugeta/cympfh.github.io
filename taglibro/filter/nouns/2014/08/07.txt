2014
年
8
月
7
日
木曜日
22
:
30
:
38
JST
===
Coffee
Script
メソッド
チェーン
中置
演算
子
javascript
```
javascript
obj
.
method
(
arg
)
```
coffee
```
coffee
obj
.
method
arg
```
```
coffee
obj
.
method
arg
```
中置
演算
子
右
結合
```
coffee
{
log
}
=
console
Object
::
pair
=
(
x
)
->
[@
valueOf
(),
x
]
log
0
.
pair
1
.
pair
2
.
pair
3
#
=>
[
0
,
[
1
,
[
2
,
3
]
]
]
log
(
0
.
pair
1
)
.
pair
2
.
pair
3
#
=>
[
[
0
,
1
],
[
2
,
3
]
]
log
((
0
.
pair
1
)
.
pair
2
)
.
pair
3
#
=>
[
[
[
0
,
1
],
2
],
3
]
```
本来
メソッド
チェーン
左
結合
```
javascript
Object
.
prototype
.
pair
=
function
(
x
){
return
[
this
.
valueOf
(),
x
]
};
console
.
log
(
0
.
pair
(
1
)
.
pair
(
2
)
.
pair
(
3
))
//
=>
[
[
[
0
,
1
],
2
],
3
]
```
これ
coffee
再現
結局
javascript
同様
括弧
必要
バージョン
1
.
7
.
0
```
coffee
x
=
0
.
pair
1
.
pair
2
.
pair
3
log
x
#
=>
[
[
[
0
,
1
],
2
],
3
]
```
改行
左
結合
よう
それ
```
coffee
Number
::
cons
=
(
ls
)
->
[@
valueOf
()]
.
concat
ls
log
1
.
cons
[
2
..
10
]
.
concat
(
10
*
i
for
i
in
[
2
..
10
])
#
=>
[
1
,
2
,
3
,
4
,
5
,
6
,
7
,
8
,
9
,
10
,
20
,
30
,
40
,
50
,
60
,
70
,
80
,
90
,
100
]
```
