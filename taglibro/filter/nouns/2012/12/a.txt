関数
型
F
#
簡単
言語
処理
夢
ん
```
fsharp
//
test
.
fs
open
System
let
fib
i
=
let
rec
fib
'
a
b
i
=
if
i
=
0
then
a
else
fib
'
b
(
a
+
b
)
(
i
-
1
)
in
fib
'
0
1
i
for
_
in
0
..
99
do
ignore
<|
fib
40
//
F
#
Compiler
for
F
#
3
.
0
(
Open
Source
Edition
)
//
real
0
m
0
.
018
s
//
user
0
m
0
.
012
s
//
sys
0
m
0
.
004
s
```
出力
計算
fsharpc
三
種類
最適
化
オプション
用意
タイム
効果
何
指定
自動的
オン
```
c
++
//
test
.
cpp
#
include
<
cstdio
>
int
fibsub
(
int
a
,
int
b
,
int
i
)
{
if
(
i
==
0
)
return
a
;
else
return
fibsub
(
b
,
a
+
b
,
i
-
1
);
}
int
fib
(
int
i
)
{
return
fibsub
(
0
,
1
,
i
);
}
main
()
{
for
(
int
i
=
0
;
i
<
100
;++
i
)
fib
(
40
);
return
0
;
}
//
/
usr
/
lib
/
gcc
/
i
686
-
linux
-
gnu
/
4
.
7
/
lto
-
wrapper
//
real
0
m
0
.
002
s
//
user
0
m
0
.
000
s
//
sys
0
m
0
.
000
s
```
```
scheme
;
test
.
scm
(
define
(
fib
i
)
(
define
(
fib
*
a
b
i
)
(
if
(=
i
0
)
a
(
fib
*
b
(+
a
b
)
(-
i
1
))))
(
fib
*
0
1
i
))
(
let
loop
((
i
0
))
(
if
(<
i
100
)
(
begin
(
fib
40
)
(
loop
(+
i
1
)))
))
;
Gauche
scheme
shell
,
version
0
.
9
.
1
[
utf
-
8
,
pthreads
],
i
686
-
pc
-
linux
-
gnu
;
real
0
m
0
.
013
s
;
user
0
m
0
.
008
s
;
sys
0
m
0
.
004
s
```
F
#
コンパイル
こと
;
stalin
コンパイル
;
real
0
m
0
.
001
s
;
user
0
m
0
.
000
s
;
sys
0
m
0
.
000
s
バカ
みたい
計算
の
計算
結果
除去
の
毎回
display
時間
二
倍
C
++
スクリプト
Scheme
こと
