read
Haskell
read
[
Char
]
任意
型
値
パース
普通
普通
関数
さ
そう
型
クラス
云々
関数
定義
そう
Int
自前
パース
read
時
一緒
型
指定
の
構造
的
型
Int
みたい
基本
的
型
それ
用
read
の
ただ
read
"
123
"
123
変換
こと
10
万
回
私
PC
もの
位
回数
時間
の
コンパイル
実行
最適
化
--
read
_
times
.
hs
a
=
"
123
"
n
=
100000
main
=
print
reads
where
reads
::
[
Int
]
reads
=
map
(\
x
->
read
a
)
[
0
..
n
]
...
$
time
./
test
>
/
dev
/
null
real
0
m
1
.
121
s
user
0
m
1
.
056
s
sys
0
m
0
.
024
s
これ
(
n
+
1
)
回
a
read
こと
具体
的
出力
評価
実行
際
/
dev
/
null
出力
自体
時間
次
自前
パース
先頭
一文字
digitToInt
これ
ため
最初
import
--
read
_
times
2
.
hs
import
Data
.
Char
a
=
"
123
"
n
=
100000
main
=
print
reads
where
reads
::
[
Int
]
reads
=
map
(\
x
->
read
_
int
a
)
[
0
..
n
]
read
_
int
str
=
read
_
int
'
str
0
where
read
_
int
'
[]
ac
=
ac
read
_
int
'
(
s
:
ss
)
ac
=
read
_
int
'
ss
(
ac
*
10
+
digitToInt
s
)
...
$
time
./
test
>
/
dev
/
null
real
0
m
0
.
109
s
user
0
m
0
.
072
s
sys
0
m
0
.
004
s
3
行
時間
1
/
10
read
toInt
専用
何
気
