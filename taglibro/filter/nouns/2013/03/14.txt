2013
年
3
月
14
日
木曜日
01
:
20
:
15
JST
言語
速度
比較
いくら
*
標準
入力
整数
パース
*
末尾
再帰
形
*
多倍
長
整数
演算
四
度
実行
max
min
２つ
Haskell
ghc
最適
化
オプション
```
haskell
--
test
.
hs
fact
0
=
1
fact
n
=
n
*
fact
(
n
-
1
)
main
=
getLine
>>=
print
.
fact
.
read
{-
$
time
./
test
<
input
8
1
5
9
1
5
2
8
3
2
4
7
8
9
7
7
3
4
3
4
5
6
1
1269596115894272000000000
real
0
m
0
.
005
s
user
0
m
0
.
000
s
sys
0
m
0
.
004
s
$
time
./
test
<
input
8
1
5
9
1
5
2
8
3
2
4
7
8
9
7
7
3
4
3
4
5
6
1
1269596115894272000000000
real
0
m
0
.
006
s
user
0
m
0
.
000
s
sys
0
m
0
.
000
s
-}
```
```
scheme
;;
test
.
scm
(
define
(
fact
n
)
(
if
(
zero
?
n
)
1
(*
n
(
fact
(-
n
1
)))))
(
print
(
fact
(
read
)))
#|
$
time
gosh
test
.
scm
<
input
8
1
5
9
1
5
2
8
3
2
4
7
8
9
7
7
3
4
3
4
5
6
1
1269596115894272000000000
real
0
m
0
.
029
s
user
0
m
0
.
012
s
sys
0
m
0
.
012
s
$
time
gosh
test
.
scm
<
input
8
1
5
9
1
5
2
8
3
2
4
7
8
9
7
7
3
4
3
4
5
6
1
1269596115894272000000000
real
0
m
0
.
029
s
user
0
m
0
.
016
s
sys
0
m
0
.
004
s
|#
```
```
javascript
//
test
.
js
(
多倍
長
演算
一部
実装
)
function
mult
(
n
,
bi
)
{
var
base
=
19
;
bi
=
bi
.
map
(
function
(
s
){
return
s
*
n
});
for
(
var
i
=
0
;
i
<
bi
.
length
;++
i
)
{
var
s
=
bi
[
i
]
+
"";
if
(
s
.
length
>
base
)
{
var
len
=
s
.
length
;
bi
[
i
]
=
+
s
.
slice
(
len
-
base
,
len
);
if
((
i
+
1
)
in
bi
)
bi
[
i
+
1
]
+=
+
s
.
slice
(
0
,
len
-
base
);
else
bi
[
i
+
1
]
=
+
s
.
slice
(
0
,
len
-
base
);
}
}
return
bi
;
}
function
show
(
bi
)
{
var
str
=
"",
len
=
bi
.
length
;
for
(
var
i
=
0
;
i
<
len
;++
i
)
str
+=
bi
[
len
-
i
-
1
];
return
str
;
}
function
fact
(
n
){
return
n
==
0
?
[
1
]
:
mult
(
n
,
fact
(
n
-
1
));
}
console
.
log
(
show
(
fact
(+
require
("
fs
").
readFileSync
("/
dev
/
stdin
","
utf
-
8
"))))
/*
$
time
node
test
.
js
<
input
8
1
5
9
1
5
2
8
3
2
4
7
8
9
7
7
0
0
4
1
8
7
2
2000006115894272000000000
real
0
m
0
.
168
s
user
0
m
0
.
072
s
sys
0
m
0
.
020
s
$
time
node
test
.
js
<
input
8
1
5
9
1
5
2
8
3
2
4
7
8
9
7
7
0
0
4
1
8
7
2
2000006115894272000000000
real
0
m
0
.
169
s
user
0
m
0
.
072
s
sys
0
m
0
.
020
s
*/
```
もん
