Sat
Oct
26
14
:
25
:
10
JST
2013
node
.
js
+
oauth
Twitter
認証
===
ログイン
可能
Twitter
アカウント
Twitter
クライアント
単位
(
consumer
_
key
,
consumer
_
secret
)
アカウント
クライアント
(
access
_
token
_
key
,
access
_
token
_
secre
)
これ
取得
4
一
回
取得
メモ
未来永劫
npm
モジュール
追加
場合
-
g
オプション
有効
初め
PC
それ
場合
インストール
際
メッセージ
ディレクトリ
環境
変数
NODE
_
PATH
```
bash
cympfh
@:~$
echo
$
NODE
_
PATH
/
usr
/
local
/
lib
/
node
_
modules
/
```
サイト
ソース
コード
参照
まんま
こと
http
://
d
.
hatena
.
ne
.
jp
/
sugyan
/
20110105
/
1294157289
ほんと
前
プログラム
の
例
npm
デフォルト
場
ディレクトリ
そこ
モジュール
保存
かしら
ディレクトリ
一緒
削除
---
作り方
===
サーバ
サーバ
簡単
こと
http
://
nodejs
.
org
/
わけ
的
express
モジュール
```
$
sudo
npm
install
-
g
express
```
モジュール
express
コマンド
一緒
ー
実験
用
ディレクトリ
```
$
express
hogehoge
```
hogehoge
ディレクトリ
中
app
.
js
routes
/
メッセージ
指示
通り
```
$
cd
hogehoge
&&
npm
install
```
の
app
.
js
routes
/
index
.
js
必要
最小限
こと
ら
ファイル
よう
express
バージョン
中身
よう
ブログ
の
自分
の
気
app
.
get
相対
パス
url
app
登録
app
```
javascript
http
.
createServer
(
app
).
listen
(
app
.
get
('
port
'),
function
(){
console
.
log
('
Express
server
listening
on
port
'
+
app
.
get
('
port
'));
});
```
サーバ
よう
これ
上
次
よう
もの
コピペ
```
javascript
var
oauth
=
new
(
require
('
oauth
').
OAuth
)(
'
https
://
api
.
twitter
.
com
/
oauth
/
request
_
token
',
'
https
://
api
.
twitter
.
com
/
oauth
/
access
_
token
',
'
qnNRwjeo
8
zFjhIDfgG
1
F
6
Q
',
//
CONSUMER
_
KEY
(
replace
)
'
JtKRv
1
e
9
QIEG
6
mKvWl
0
g
4
ygGVGzWclgfd
7
GaSBEGtg
',
//
CONSUMER
_
SECRET
(
replace
)
'
1
.
0
',
'
http
://
127
.
0
.
0
.
1
:
3000
/
signin
/
twitter
',
//
callback
URL
'
HMAC
-
SHA
1
'
);
app
.
get
('/
signin
/
twitter
',
function
(
req
,
res
)
{
var
oauth
_
token
=
req
.
query
.
oauth
_
token
;
var
oauth
_
verifier
=
req
.
query
.
oauth
_
verifier
;
if
(
oauth
_
token
&&
oauth
_
verifier
)
{
console
.
log
("##",
oauth
_
token
,
oauth
_
verifier
);
oauth
.
getOAuthAccessToken
(
oauth
_
token
,
null
,
oauth
_
verifier
,
function
(
error
,
oauth
_
access
_
token
,
oauth
_
access
_
token
_
secret
,
results
)
{
if
(
error
)
{
res
.
send
(
error
,
500
);
}
else
{
//
req
.
session
.
user
=
results
.
screen
_
name
;
console
.
log
("@@@",
oauth
_
access
_
token
,
oauth
_
access
_
token
_
secret
);
res
.
end
(
oauth
_
access
_
token
+
"
"
+
oauth
_
access
_
token
_
secret
);
//
res
.
redirect
('/');
}
}
);
}
else
{
oauth
.
getOAuthRequestToken
(
function
(
error
,
oauth
_
token
,
oauth
_
token
_
secret
,
results
)
{
if
(
error
)
{
res
.
send
(
error
,
500
);
}
else
{
req
.
session
=
{
oauth
_
token
:
oauth
_
token
,
oauth
_
token
_
secret
:
oauth
_
token
_
secret
,
request
_
token
_
results
:
results
};
res
.
redirect
('
https
://
api
.
twitter
.
com
/
oauth
/
authorize
?
oauth
_
token
='
+
oauth
_
token
);
}
});
}
});
```
これ
ブラウザ
http
://
127
.
0
.
0
.
1
:
3000
/
signin
/
twitter
もの
dev
.
twitter
.
com
方
アプリケーション
コール
バック
url
登録
あれ
関係
---
Author
:
枚方
(
Hirakata
)
Contact
:
cympfh
`
at
`
gmail
`
dot
`
com
