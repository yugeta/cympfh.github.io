1
/
14
This
says
"
More
Use
Me
!"
題
:
手
切断
人
はず
手
痛み
よう
答
例
:
はず
2013
年
日常
文体
練習
三
日
ぶり
外
雪
夕方
私
未踏
箇所
慎重
かき氷
音
雪
靴
侵入
地面
私
頭
よう
```
scheme
(
define
(
f
x
)
(*
x
2
))
```
手続き
以下
生成
```
scheme
(
lambda
(
x
)
(
f
(
f
x
)))
```
ただ
関数
合成
それ
cut
簡潔
>
(
cut
f
(
f
<>))
gosh
>
f
の
関数
適用
>
((
cut
f
(
f
<>))
3
)
gosh
>
***
ERROR
:
Compile
Error
:
wrong
number
of
arguments
:
#
f
requires
0
,
but
got
1
"(
stdin
)":
2
:((
cut
f
(
f
<>))
3
)
Stack
Trace
:
_
_
_
_
_
_
_
_
_
_
_
_
_
_
_________________________
gosh
>
f
関数
適用
メッセージ
試し
(
disasm
(
cut
f
<>))
gosh
>
CLOSURE
#<
closure
#
f
>
main
_
code
(
name
=#
f
,
code
=
0
x
833
e
5
d
0
,
size
=
4
,
const
=
1
,
stack
=
4
):
args
:
#
f
0
LREF
0
-
PUSH
;
x
1
GREF
-
TAIL
-
CALL
(
1
)
#<
identifier
user
#
f
>;
(
f
x
)
3
RET
x
f
(
disasm
(
cut
f
(
f
<>)))
gosh
>
CLOSURE
#<
closure
#
f
>
main
_
code
(
name
=#
f
,
code
=
0
x
83
c
4
dc
0
,
size
=
9
,
const
=
3
,
stack
=
11
):
args
:
#
f
0
PRE
-
CALL
(
1
)
6
2
GREF
-
PUSH
#<
identifier
user
#<>>;
<>
4
GREF
-
CALL
(
1
)
#<
identifier
user
#
f
>;
(
f
<>)
6
PUSH
-
GREF
-
TAIL
-
CALL
(
1
)
#<
identifier
user
#
f
>;
(
f
(
f
<>))
8
RET
マクロ
<>
引数
lambda
はず
<>
ID
マクロ
そのもの
勉強
その後
cut
仕様
---
(
use
srfi
-
1
)
take
,
drop
,
iota
,
fold
,
fold
-
right
こと
今日
compose
中
```
scheme
gosh
>
((
compose
f
(
cut
f
<>))
3
)
12
```
