Fri Feb 22 13:56:48 JST 2013

node.js - socket.io

どうしたら皆に楽しんでもらえるかなって思った．
Twitterのパスワードでも公開したら楽しいかな．
私ならパスワード知った瞬間ログインしてパスワード
変更するなって思ってやめた．

httpで私のアカウントのTLを公開して、自由にツイート
できるようにした．飽きたら今日中にでも消す．
http://cympfh.dip.jp/

/*
    自由にツイートできるのは危険でしょ、犯罪予告とか
    されるよ、って言われて、そりゃそうだなって思った．
    なので少し工夫した．工夫とは言わないかもしれない．
 */

タイムラインは、リアルタイムにweb socket で更新させたい．
node.jsのsocket.ioというのを使うことにした．ずっと前に

-title="たったの50行！ node.js でツイート垂れ流しサイト作成法 - 虫けらロック" http://d.hatena.ne.jp/miruto824/20110608/1307526558

これを見たのを覚えてたから．
結果いうと、それはそのまま動かすことができなかった．
でもまあ、80番ポートを使うにはsudo の必要があったのと
socket.ioの公式のサイト見れば、問題なかった．

/*
  ソース全体の行数もさることながら、使い方をググるところから
  初めて完成するまで二時間かからなかった．すごいのはnode.js
  の豊富なモジュール群だ．
 */

結果動いたけど、少し強引なのは、socket.ioもntwitterも
全く同様のストリームで、ntwitterにおいてdataが来た時に、
どうやってsocket全員にemitしたらいいのかというの．
以下ソースです．
test.js と index.html

// test.js
var app = require("http").createServer(handler),
    io = require("socket.io").listen(app),
    fs = require("fs"),
    twitter = require('ntwitter')

function handler (req, res) {
    fs.readFile("./index.html", function (err, data) {
        res.writeHead(200);
        res.end(data);
    });
}

var tw = new twitter({
    consumer_key: 'oAbnSSCx74rmQgBRP2ug',
    consumer_secret: 'U0CRnor8FrZVVjbrgqLFwhAi343VMgad11L00SRNss',
    access_token_key: 'naisho',
    access_token_secret: 'naisho'
});

var sockets = [];
tw.stream('user',  function(stream) {
    stream.on('data', function(data) {
        if (!data || !data.user || !data.text) return;
        for (i in sockets)
            sockets[i].emit("news", {
                name : data.user.name,
                id   : data.user.screen_name,
                image: data.user.profile_image_url,
                source: data.user.protected ? "鍵" : data.source,
                text : data.user.protected ? "鍵" : data.text});
    });
});

app.listen(80);
io.sockets.on("connection", function (socket) {
    sockets.push(socket);
    socket.on("post", function(data) {
        var text = isOK(data.text);
        if (!text) return;
        tw.post("http://api.twitter.com/1/statuses/update.json",
            {status : text}, function(er, data) {});
    });
});

function isOK(t) {
    // NG word!
    t = t.replace(/殺|爆|破|天|皇|死|総|理|人|罪|狙|撃|害|事|件|駅/g, "○");
    // shuffle! (し過ぎないシャッフル)
    t =
        t.split("")
        .sort(function(){return Math.random() - .5})
        .join("");

    return t;
}


<!-- index.html -->
<html><head>
<script src="/socket.io/socket.io.js"></script>
<script>
  var socket = io.connect("http://cympfh.dip.jp")
  socket.on('news', function (data) {
      var X = document.getElementById("X");
      var y =
          "<img src=" + data.image + " style=\"float:left\"> " +
          "<a href=http://twitter.com/" + data.id + ">@"+data.id + "</a> / " +
          data.name +" :<br>" +
          data.text.replace(/\n/g, "<br>") +
          " (via " + data.source + ")<hr>"
      X.innerHTML = y + X.innerHTML;
  });

  function PosttoTwitter(msg) {
      socket.emit("post", {text:msg});
      return false;
  }
  function y(event) {
      if (event.shiftKey && (event.keyCode==13 || event.keyCode==10)) {
          PosttoTwitter(document.getElementById("Y").value);
          document.getElementById("Y").value = "";
          return false;
      }
      return true;
  }
  function z(){
      PosttoTwitter(document.getElementById("Y").value);
        document.getElementById("Y").value = "";
  }
</script>
</head>
<body>
<h3>und dich</h3>
<textarea id="Y" style="width: 80%; height: 60px" onkeydown="return y(event)">Shift+Enter to post</textarea>
<input type="button" onclick=z() value="post">
<hr> <div id="X" style="width: 80%"></div>
<hr> 上に行くほど新しい
</body>
