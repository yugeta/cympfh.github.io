Sat Mar 16 19:44:42 JST 2013

-title="部分継続便利だなー。 - podhmoの日記"
http://d.hatena.ne.jp/podhmo/20101217/1292565023

gosh> (define k #f)
k
gosh> (reset (for-each (^x (shift cc (set! k cc) x)) (list 1 2 3)))
1
gosh> (k)
2
gosh> (k)
3
gosh> (k)
#<undef>

ええっと、reset-shiftで作った継続は引数を取らないのね．まずそこから
初めて知った．で、これの有用性は、既にそこにあるループを中断、再開
させること．再帰なんかでこれを実現するには、中身が使ってるパラメータ
なんかを全部、再帰の引数にして、中断・再開にはそのパラメータは保存
しておくのだろう．それらをパッと実現できるので、継続は有用である．
ということかな．

---
title=部分継続チュートリアル
http://outer-inside.blogspot.jp/2011/03/blog-post.html

gosh> (cons 0 (reset (cons 1 (shift k (cons 2 'null )))))
(0 2 . null)
gosh> k
#<closure (call/pc #f #f)>
gosh> (cons 0 (reset (cons 1 (shift cc (set! k cc) (cons 2 'null )))))
(0 2 . null)
gosh> k
#<closure (call/pc #f #f)>
gosh> (k 3)
(1 . 3)
gosh> (k)
(1 . #<undef>)

引数とるじゃん．取らなくても何かにはなるのね

gosh> (d k)
#<closure (call/pc #f #f)> is an instance of class <procedure>
slots:
  required  : 0
  optional  : #t
  optcount  : 1
  locked    : #f
  currying  : #f
  constant  : #f
  info      : (call/pc #f #f)
  setter    : #f

うん、まあ、わからん．

---
title="Gauche ユーザリファレンス: 9.20 gauche.partcont - 部分継続"
http://practical-scheme.net/gauche/man/gauche-refj_94.html

初めからココ読むんだった．
分かった気にはなった．
そして、ループの外側と内側をreset-shiftで挟むことで、ループを一周だけ
回すような継続が取り出せる、んだろう．

